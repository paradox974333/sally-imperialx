version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: sally-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - sally-network

  mongo:
    image: mongo:7.0
    container_name: sally-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=sally_chat
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - sally-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sally-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://mongo:27017
      - MONGODB_DB_NAME=sally_chat
      - BYBIT_MASTER_KEY=${BYBIT_MASTER_KEY}
      - BYBIT_MASTER_SECRET=${BYBIT_MASTER_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://host.docker.internal:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      - ALLOWED_ORIGINS=http://localhost:8080,http://localhost:3000,http://localhost:5173,http://localhost:4173
    depends_on:
      redis:
        condition: service_started
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sally-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sally-frontend
    ports:
      - "8080:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - sally-network

volumes:
  redis_data:
    driver: local
  mongo_data:
    driver: local

networks:
  sally-network:
    driver: bridge
